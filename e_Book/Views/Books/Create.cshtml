@model e_Book.Models.Book

@{
    ViewBag.Title = "הוספת ספר חדש";
}

<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="~/Content/rtl.css" />
</head>
<body>
    <h2 class="text-center">הוספת ספר חדש</h2>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <!-- כותרת הספר -->
            <div class="form-group">
                @Html.LabelFor(model => model.Title, "כותרת הספר")
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <!-- מחבר -->
            <div class="form-group">
                @Html.LabelFor(model => model.Author, "מחבר")
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>

            <!-- הוצאה לאור -->
            <div class="form-group">
                @Html.LabelFor(model => model.Publisher, "הוצאה לאור")
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>

            <!-- מחיר קנייה -->
            <div class="form-group">
                @Html.LabelFor(model => model.PriceBuy, "מחיר קנייה")
                @Html.EditorFor(model => model.PriceBuy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceBuy, "", new { @class = "text-danger" })
            </div>

            <!-- מחיר חדש -->
            <div class="form-group">
                @Html.LabelFor(model => model.PreviousPrice, "מחיר חדש")
                @Html.EditorFor(model => model.PreviousPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PreviousPrice, "", new { @class = "text-danger" })
            </div>

            <!-- מחיר השאלה -->
            <div class="form-group">
                @Html.LabelFor(model => model.PriceBorrow, "מחיר השאלה")
                @Html.EditorFor(model => model.PriceBorrow, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceBorrow, "", new { @class = "text-danger" })
            </div>

            <!-- עותקים זמינים -->
            <div class="form-group">
                @Html.LabelFor(model => model.AvailableCopies, "עותקים זמינים")
                @Html.EditorFor(model => model.AvailableCopies, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AvailableCopies, "", new { @class = "text-danger" })
            </div>


            <!-- פורמט -->
            <div class="form-group">
                @Html.LabelFor(model => model.Format, "פורמט")
                @Html.DropDownListFor(model => model.Format, new SelectList(new[] { "PDF", "EPUB", "MOBI", "FB2" }, "בחר פורמט"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Format, "", new { @class = "text-danger" })
            </div>

            <!-- ז'אנר -->
            <div class="form-group">
                @Html.LabelFor(model => model.Genre, "ז'אנר")
                @Html.DropDownListFor(model => model.Genre, new SelectList(new[] { "רומנטיקה", "אקשן", "דרמה", "קומדיה", "מדע בדיוני", "פנטזיה", "היסטוריה", "שירה" }), "בחר ז'אנר", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>

            <!-- שנת פרסום -->
            <div class="form-group">
                @Html.LabelFor(model => model.YearPublished, "שנת פרסום")
                @Html.EditorFor(model => model.YearPublished, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearPublished, "", new { @class = "text-danger" })
            </div>

            <!-- ניתן להשאלה -->
            <div class="form-group">
                @Html.LabelFor(model => model.IsBorrowable, "ניתן להשאלה")
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsBorrowable)
                </div>
            </div>

            <!-- הגבלת גיל -->
            <div class="form-group">
                @Html.LabelFor(model => model.AgeRestriction, "הגבלת גיל")
                @Html.DropDownListFor(model => model.AgeRestriction, new SelectList(new[] { "לכל הגילאים", "8+", "12+", "16+", "18+" }, "בחר הגבלת גיל"), new { @class = "form-control" })
            </div>

            <!-- תקציר -->
            <div class="form-group">
                @Html.LabelFor(model => model.Synopsis, "תקציר הספר")
                @Html.TextAreaFor(model => model.Synopsis, new { @class = "form-control", rows = 4 })
                @Html.ValidationMessageFor(model => model.Synopsis, "", new { @class = "text-danger" })
            </div>

            <!-- קישור תמונה -->
            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, "קישור לתמונה")
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <!-- קישור הורדה -->
            <div class="form-group">
                @Html.LabelFor(model => model.DownloadLink, "קישור להורדה")
                @Html.EditorFor(model => model.DownloadLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DownloadLink, "", new { @class = "text-danger" })
            </div>

            <!-- כפתור שמירה -->
            <div class="form-group text-center">
                <input type="submit" value="שמור" class="btn btn-success" />
                @Html.ActionLink("חזרה לרשימה", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    }
</body>
</html>

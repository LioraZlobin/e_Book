@model IEnumerable<e_Book.Models.UserLibraryItem>

@{
    ViewBag.Title = "ספרייה אישית";
    string userName = Session["UserName"] != null ? Session["UserName"].ToString() : "אורח"; // שליפת שם המשתמש מה-Session
}

<h2>ספרייה אישית</h2>

<!-- כפתור להרצת תהליך ניקוי -->
<form action="/Borrows/RunBorrowCleanup" method="get" style="margin-bottom: 15px;">
    <button type="submit" class="btn btn-primary">רענן דף ונקה השאלות שפג תוקפן</button>
</form>

<!-- הצגת הודעות הצלחה או שגיאה -->
@if (TempData["Success"] != null)
{
<div class="alert alert-success">@TempData["Success"]</div>}
@if (TempData["Error"] != null)
{
<div class="alert alert-danger">@TempData["Error"]</div>}
<!-- הצגת הודעת שלום -->
@if (userName != "אורח")
{
    <div class="alert alert-info">
        שלום, @userName!
    </div>
}
else
{
    <div class="alert alert-warning">
        שלום, אורח! אנא התחבר כדי לצפות בספריה האישית שלך.
    </div>
}


<table class="table">
    <thead>
        <tr>
            <th>כותרת הספר</th>
            <th>תאריך השאלה</th>
            <th>תאריך להחזרה</th>
            <th>תאריך רכישה</th>
            <th>סטטוס</th>
            <th>פעולות</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Title</td>
                <td>@(item.BorrowDate.HasValue ? item.BorrowDate.Value.ToShortDateString() : "לא הושאל")</td>
                <td>@(item.DueDate.HasValue ? item.DueDate.Value.ToShortDateString() : "לא הושאל")</td>
                <td>@(item.PurchaseDate.HasValue ? item.PurchaseDate.Value.ToShortDateString() : "לא נרכש")</td>

                <td>@(item.IsBorrowed ? "מושאל" : item.IsPurchased ? "נרכש" : "לא נרכש")</td>
                <td>
                    @if (item.IsBorrowed)
                    {<!-- כפתור החזרת ספר מושאל -->
                        <form action="@Url.Action("ReturnBook", "Borrows")" method="post" style="display:inline-block;" onsubmit="return confirmReturn(false);">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="borrowId" value="@item.BorrowId" />
                            <input type="hidden" name="bookId" value="@item.BookId" />
                            <button type="submit" class="btn btn-danger">החזר ספר</button>
                        </form> }
                    else if (item.IsPurchased)
                    { <!-- כפתור מחיקת ספר שנרכש -->
                        <form action="@Url.Action("DeletePurchasedBook", "Borrows")" method="post" style="display:inline-block;" onsubmit="return confirm('האם אתה בטוח שברצונך למחוק את הספר שנרכש? פעולה זו תסיר אותו לצמיתות מהספרייה האישית שלך.');">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="bookId" value="@item.BookId" />
                            <button type="submit" class="btn btn-warning">מחק ספר</button>
                        </form>}



                    <!-- כפתור הורדת ספר -->
                    @*@if (!string.IsNullOrEmpty(item.DownloadLink))
                        {
                            <a href="@Url.Action("DownloadBook", "Borrows", new { bookId = item.BookId })" class="btn btn-success">הורד ספר</a>
                        }
                        else
                        {
                            <span class="text-danger">לא נמצא קישור להורדה לספר זה.</span>
                        }*@
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function confirmReturn(isPurchased) {
            if (isPurchased) {
                return confirm("האם אתה בטוח שברצונך להחזיר את הספר שנרכש? פעולה זו תסיר את הספר מהספרייה האישית שלך.");
            }
            return true;
        }
    </script>
}
